services:
  # Servicio de API Gateway
  gatewayapi:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: GatewayAPI/Dockerfile
    ports:
      - "8000:8080" # El puerto público de la aplicación

  # Microservicio de Restaurantes
  restauranteapi:
    image: ${DOCKER_REGISTRY-}restauranteapi
    build:
      context: .
      dockerfile: RestauranteAPI/Dockerfile
    ports:
      - "8001:8080" # Puerto interno para debugging
    depends_on:
      - restaurantedb
    environment:
      - ConnectionStrings__DefaultConnection=Server=restaurantedb;Database=RestauranteDB;User=sa;Password=Your_password123;TrustServerCertificate=True

  # Microservicio de Pedidos
  pedidosapi:
    image: ${DOCKER_REGISTRY-}pedidosapi
    build:
      context: .
      dockerfile: PedidosAPI/Dockerfile
    ports:
      - "8002:8080" # Puerto interno para debugging
    depends_on:
      - pedidosdb
    environment:
      - ConnectionStrings__DefaultConnection=Server=pedidosdb;Database=PedidosDB;User=sa;Password=Your_password123;TrustServerCertificate=True

  # Base de Datos para Restaurantes
  restaurantedb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1434:1433" # Mapea a un puerto único en el host
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123

  # Base de Datos para Pedidos
  pedidosdb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123